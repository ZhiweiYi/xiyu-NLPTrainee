class Solution:
    def myAtoi(self, str):
        str = str.strip()  # 去除空格
        if str == "":
            return 0;  # 特殊情况 str="0"
        left = 0
        right = 0
        maxi = 2**31 - 1
        mini = -2**31  # 用于后面判断是否越界
        if str[0] == '+' or str[0] == '-':
            left = 1  # 判断第一个字符是否为正负号
        if (left == 1 and len(str) == 1) or str[left] < '0' or str[left] > '9':
            return 0  # 特殊情况 str="+"
        for i in range(left, len(str)):  # right移动到第一个不是数字的地方
            if str[i] >= '0' and str[i] <= '9':
                right = i
            else:
                break
        res = str[left:right + 1].lstrip('0')  # 去除左边的0
        if len(res) == 0:
            return 0  # 清除后可能没数字
        else:
            res = eval(res)
        if left == 1 and str[0] == '-':  # 判断正负
            res = -res
        if res > maxi:
            return maxi
        elif res < mini:
            return mini
        else:
            return res


if __name__ == '__main__':
    s = Solution()
    print(s.myAtoi('    -4978787 名名'))
