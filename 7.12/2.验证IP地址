class Solution:
    def validIPAddress(self, IP):
        if self.isIPv4(IP):
            return "IPv4"
        elif self.isIPv6(IP):
            return "IPv6"
        else:
            return "Neither"

    def isIPv4(self, IP):
        import re
        # 格式校验
        IP = IP + "."
        pv4 = re.compile(r"(([1-9]\d{0,2}|[0])\.){4}")  # .号要转义\
        m = pv4.fullmatch(IP)  # 全匹配
        IP = IP[0:-1]  # 去掉尾部.号
        if m is None:
            return False
        # 校验大小
        # print(m.group())
        ip_list = list(map(lambda x: int(x), IP.split(".")))
        for part in ip_list:
            if part > 255 or part < 0:
                return False
        return True

    def isIPv6(self, IP):
        import re
        IP = IP + ":"
        pv6 = re.compile(r"(([\dA-Fa-f]{1,4}):){8}")
        m = pv6.fullmatch(IP)
        IP = IP[0:-1]
        if m is None:
            return False
        return True

if __name__ == '__main__':
    s = Solution()
    print(s.validIPAddress('172.16.254.1'))
    print(s.validIPAddress('2001:0db8:85a3:0:0:8A2E:0370:7334'))
    print(s.validIPAddress('256.256.256.256'))
